<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[斗转圣帝博客]]></title>
  <subtitle><![CDATA[自由]]></subtitle>
  <link href="/atom.xml" rel="self"/>
  <link href="http://godanimal.com/"/>
  <updated>2015-12-11T13:51:32.000Z</updated>
  <id>http://godanimal.com/</id>
  
  <author>
    <name><![CDATA[斗转圣帝]]></name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[15个必知的Android开发者选项]]></title>
    <link href="http://godanimal.com/2015/12/11/android-tips/"/>
    <id>http://godanimal.com/2015/12/11/android-tips/</id>
    <published>2015-12-11T09:30:30.000Z</published>
    <updated>2015-12-11T13:51:32.000Z</updated>
    <content type="html"><![CDATA[<div class="rich_media_content " id="js_content"><br><br>                        <p>Android开发者选项，看起来很简单的事情，其实很多同学对它了解得不够，Google用心良苦得为我们设计了这么多小开关都是有它的作用的，今天也花了点时间，过了一遍全部的30多个开关，从中整理出15个对日常Android开发比较有帮助的选项。</p><p><br></p><p>需要指出的是，不同的ROM对开发者选项的支持不一样，精简掉一些很正常，我下面提到的都是官方支持的功能，当然不同的官方版本支持程度也不一样，你手机上找不到也别奇怪。</p><p><br></p><p>抱歉这里不介绍开发者选项在哪怎么开启之类的问题。</p><p><br></p><p><strong>1. Stay awake</strong></p><p>充电时保持屏幕唤醒，开发的时候，时不时的锁屏真是够了，开启它后只要插着USB线就不需要总去解锁屏幕啦。</p><p><br></p><p><strong>2. Select runtime（Dalvik or ART）</strong></p><p>ART runtime下你的应用会更加丝滑，目前高版本的Android上已经直接是ART runtime了，但作为Android开发也许需要保证你的应用在两种runtime下都能正常运行，这可能是测试时需要更多考虑的。</p><p><br></p><p><strong>3. Process stats</strong></p><p>里面有关于当前运行进程的一切信息，对于一般用户，它就是一堆无意义的数字，对于Android开发人员来说，调试时这些信息也许可以帮你大忙。</p><p><br></p><p><strong>4. USB debugging</strong></p><p>这个无需介绍，不开它怎么调试呢？（虽然现在都流行无线调试了）</p><p><br></p><p><strong>5. Allow mock locations</strong></p><p>当你的应用需要用到GPS功能，获取位置信息时（比如天气应用），可以通过它搭配一些位置模拟应用，模拟全球任何地点。（还能干什么？机智的你肯定想到啦）</p><p><br></p><p><strong>6. Show surface updates</strong></p><p>在界面绘制时，闪烁提醒，开启它后简直能闪瞎你的眼睛，但有时候我们需要精确知道具体的界面绘制细节时，不得不需要忍受这种折磨。</p><p><br></p><p><strong>7. Show layout bounds</strong></p><p>显示布局格子，当你看到一个应用有很棒的界面效果，想知道它是怎么布局的？开启这个功能即可。我更常用的使用场景是：每当有PM过来问我人家这个界面是Native实现的，还是类似Hybrid方案的Web实现时，我就让他开启这个功能，WebView是一个整体的格子，Native View是各种小格子组合而成。（除非自己重绘实现自定义View, 一般复杂布局也不会这么干）</p><p><br></p><p><br></p><p><strong>8. Force RTL layout direction</strong></p><p>强制RTL布局，RTL也就是Right To Left，阿拉伯国家一般有这种文化，类似古时候的中国，文字从右往左读，包括界面布局也是从右往左的，感觉操作习惯都跟我们是镜像的，如果你跟我一样不幸需要做这种坑爹适配的话，这也是必须掌握的技能。</p><p><br></p><p><strong>9. Animation scale</strong></p><p>动画的尺度、速度调整也是很有用的功能，尤其在实现复杂的组合动画效果时，调慢点可以看得更清楚，当然你可以在自己代码里调慢，但每次改代码重新build很麻烦对不对？而且如果是PM走过来让你研究一下某款App的酷炫动画效果呢？</p><p><br></p><p><strong>10. Simulate secondary displays</strong></p><p>它允许你模拟不同屏幕尺寸下应用的表现，IDE里虽然也有类似的功能，可那毕竟只是个静态的效果。</p><p><br></p><p><strong>11. Debug GPU overdraw</strong></p><p>这里是指不正确的过度绘制：</p><ul class=" list-paddingleft-2" style="list-style-type: disc;"><li><p>原色: 没有过度绘制</p></li><li><p>蓝色: 一次过度绘制</p></li><li><p>绿色: 两次过度绘制</p></li><li><p>粉色: 三次过度绘制</p></li><li><p>红色: 四次及以上过度绘制</p></li></ul><p><br></p><p>值得提醒的是，过度绘制有时是无法避免的，Android建议是不要超过一次过度绘制，也就是可以是蓝色的，不能绿了。</p><p><br></p><p><strong><br></strong></p><p><strong>12. Strict mode enabled</strong></p><p>严苛模式下，当应用做了一些影响性能的事情，屏幕会闪一下提醒你。你也可以在代码里为自己的应用开启严苛模式，一旦发现一些性能问题，就会有详细Log输出, 为避免影响线上用户，建议只在Debug模式下开启。</p><p><br></p><p><strong>13. Show CPU usage</strong></p><p>在你屏幕右上角显示一个小窗口，提示当前CPU的各种信息，在性能调试时会有一些帮助，看是否是CPU的负载过高导致了性能问题。</p><p><br></p><p><br></p><p><strong>14. Profile GPU rendering</strong></p><p>看下面这张图，就明白它的作用了，开启后，会在下方显示一张实时绘制图，记住<span style="color: rgb(61, 167, 66);"><strong>那条绿线</strong></span>是性能流畅与否的底线，超过的时刻就会出现掉帧，就会有卡顿的感觉，界面性能调优的一个最重要指标就是将所有界面操作尽量优化到那条绿线以下。具体的原理可以看胡凯同学的Android性能优化典范，我的公众号里也收录了他这篇经典文章。</p><p><br></p><p><strong>15. Don&#39;t keep activities</strong></p><p>开启这个选项后，当你从Activity A跳转到Activity B时，Activity A就会被立即销毁，这一般用来模拟设备内存不足时后台Activity被销毁的场景，如果你的应用能做到开启它时功能仍基本正常，说明代码设计得比较合理，不同Activity之间的耦和很低，对于复杂业务的应用来说，能做到这点真心不容易。</p><p><br></p><hr></div>]]></content>
    <summary type="html">
    <![CDATA[<div class="rich_media_content " id="js_content"><br><br>                        <p>Android开发者选项，看起来很简单的事情，其实很多同学对它了解得不够，Google用心良苦得为我们设计了这么]]>
    </summary>
    
      <category term="Android开发" scheme="http://godanimal.com/tags/Android%E5%BC%80%E5%8F%91/"/>
    
      <category term="技巧" scheme="http://godanimal.com/tags/%E6%8A%80%E5%B7%A7/"/>
    
      <category term="测试技巧" scheme="http://godanimal.com/tags/%E6%B5%8B%E8%AF%95%E6%8A%80%E5%B7%A7/"/>
    
      <category term="Android开发" scheme="http://godanimal.com/categories/Android%E5%BC%80%E5%8F%91/"/>
    
      <category term="技巧" scheme="http://godanimal.com/categories/Android%E5%BC%80%E5%8F%91/%E6%8A%80%E5%B7%A7/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[如何估算一个项目的开发费用]]></title>
    <link href="http://godanimal.com/2015/12/10/hello-world/"/>
    <id>http://godanimal.com/2015/12/10/hello-world/</id>
    <published>2015-12-10T09:30:30.000Z</published>
    <updated>2015-12-11T13:51:32.000Z</updated>
    <content type="html"><![CDATA[
<ol>
<li><p>招聘一个开发者的成本<br>如今（2015年） IT 行业蓬勃发展，对软件开发工程师的需求很大，导致工程师的工资一路水涨船高，以一线城市为例，一个能实际干活的应届开发者的月薪在10000元左右，3年以上工作经验的基本能达到20000元。我们姑且把三年工作经验定义为靠谱的开发者，再加上其他福利和管理成本，一个靠谱全职开发者的成本在30000元左右。这还没有算上你招聘的成本，想想是不是很肉疼？没办法，行情就是这样，就跟这房价一样。</p>
</li>
<li><p>外包项目费用的计算方式<br>外包分为两种，人力外包和项目外包。人力外包是指外包公司派一个人去你公司工作，你按天支付这个人的费用给外包公司。目前这种外派的基本要价是1000元每天，好一点的人员在2000元以上。项目外包是指做完一个项目多少钱，不管外包公司投入多少人。有点类似于装修队的点工和包工。项目外包的价格虽然是打包价，但也是通过估算工时算出来的。例如一个项目预计需要两个人开发20天，那就是40人天的工作量，按照1500元/人天算（这已经是良心价了），这个项目就是60000元。</p>
</li>
</ol>
<p>看到这里你一定会觉得，外包好贵，怎么比招一个人的成本贵那么多！君不见，用人除了硬性成本还有很多软性成本的。例如招聘的时间成本，招来不合适开人的成本。而通过外包，你可以做到召之即来，挥之即去，这些软性成本都是外包公司承担了，你要算单价，自然会贵一些。</p>
<p>好了，下面我们回到正题，“开发这样一个软件需要多少钱？”。这里的核心问题是如何定义“这样”。你需要准确的估价，那就需要把需求定义清楚，否则估价就是耍流氓，最后一定导致纠纷。需求定义包含以下几个方面：</p>
<ol>
<li><p>设计要求<br>一个好的设计是很贵的，因为涉及到创意，而且不好评估，见仁见智。就跟你请大师画一幅画，还是请普通画师画一幅画一样，看你想要什么了。在我看来，绝大部分软件项目设计中规中矩就好了，请一个有经验的设计师，按照最新流行的设计风格设计一套 UI 都不会差到哪里去。而且价格都比较便宜的，一个 APP 的 UI 设计，一般在10000 - 20000之间，应该能有不错的效果。当然，你对设计没有要求的话，你找一个应届生做一套 UI，几千块就搞定了，也不会太丑的。</p>
</li>
<li><p>功能要求<br>我不止一次被问到，“我想做一个类似于微信的 APP……”，然后我就呵呵了。其实你不是真的想做一个微信，我相信你想要的只是微信的部分功能，例如聊天部分。所以你应该更加准确的描述你对功能的要求，例如：类似于微信的聊天功能，可以发文字，图片，语音还有视频，可以多人拉群对话。有新消息会弹出通知，聊天记录保存在服务器端……。在这一点上不能懒，你需要强迫自己去描述这些功能，你不要以为你自己不懂就不去仔细思考，其实你可以的。有些功能看起来差不多，其实有很大的区别，比如聊天是否需要支持表情，表情是否支持动画这些其实工作量都是很不一样的。</p>
</li>
<li><p>性能要求<br>性能问题其实不是特别需要关注，因为在目前的技术发展水平上，性能都不会有太大的问题，特别是在项目初期，但也还是要说一说。同样的功能，但是性能要求不一样，工作量是完全不一样的。还拿聊天来举例子，这个功能是比较常见的，但是你说要像微信一样支持几亿用户同时聊天，那就是两码事了。同样是个车，QQ和奔驰还是很不一样的。</p>
</li>
</ol>
<p>在明确了以上信息以后，你找一个有经验的开发者或者项目经理就能给你一个明确的估价了。值得注意的是，软件开发是一件非常不标准的事情，跟装修很像，要留有余地，你把费用卡的太死，最后别人只能偷工减料了。</p>
<p>当然还有一种估价方式，你先确定预算，然后再来定细节功能。例如你打算花50000来做一个 APP，具有类似微信的聊天功能，还有相互关注晒照片功能。你把详细的功能需求给到开发者或者项目经理，他会去判断你的预算能否实现你的要求，如果不能的话，你们再商量哪些功能可以先不做，例如聊天发表情功能不是很重要就先不做了，可以节约一些成本。</p>
<p>无论何种方式，都需要你明确需求，明确需求，明确需求！重要的事情说三遍。所以你找别人报价的时候，千万不要只扔过去“开发一个类似于 xxxx 这样的 APP 需要多少钱？”，你不会得到你想要的答案的，回答这样的问题是不负责任的。不过，这倒不失为一种过滤服务方的一种方法：）</p>
]]></content>
    <summary type="html">
    <![CDATA[
<ol>
<li><p>招聘一个开发者的成本<br>如今（2015年） IT 行业蓬勃发展，对软件开发工程师的需求很大，导致工程师的工资一路水涨船高，以一线城市为例，一个能实际干活的应届开发者的月薪在10000元左右，3年以上工作经验的基本能达到20000元。我们姑且把三年工作]]>
    </summary>
    
      <category term="估算" scheme="http://godanimal.com/tags/%E4%BC%B0%E7%AE%97/"/>
    
      <category term="开发成本" scheme="http://godanimal.com/tags/%E5%BC%80%E5%8F%91%E6%88%90%E6%9C%AC/"/>
    
      <category term="开发" scheme="http://godanimal.com/categories/%E5%BC%80%E5%8F%91/"/>
    
  </entry>
  
</feed>
